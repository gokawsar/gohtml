<?php
// Enable error reporting for debugging
error_reporting(E_ALL);
ini_set('display_errors', 1);

// Define time slots
$timeSlots = [
    '08:30:AM - 10:00:AM',
    '10:00:AM - 11:30:AM',
    '11:30:AM - 01:00:PM',
    '01:30:PM - 03:00:PM',
    '03:00:PM - 04:30:PM'
];

// Define days
$days = ['Sat', 'Sun', 'Mon', 'Tue', 'Wed'];

// Initialize variables
$courses = [];
$selectedCourses = [];
$totalCredits = 0;
$message = '';

// Process file upload
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_FILES['excelFile'])) {
    if ($_FILES['excelFile']['error'] === UPLOAD_ERR_OK) {
        $tmpName = $_FILES['excelFile']['tmp_name'];
        $courses = parseExcelData($tmpName);
    } else {
        $message = 'Error uploading file.';
    }
}

// Process course selection
if (isset($_POST['selected_courses'])) {
    $selectedCourses = $_POST['selected_courses'];
    $totalCredits = calculateTotalCredits($selectedCourses, $courses);
    
    // Check for time conflicts
    $conflicts = checkTimeConflicts($selectedCourses, $courses);
    if (!empty($conflicts)) {
        $message = 'Time conflict detected between: ' . implode(', ', $conflicts);
        $selectedCourses = []; // Reset selection
        $totalCredits = 0;
    }
}

// Function to parse Excel data (simplified for this example)
function parseExcelData($filePath) {
    $courses = [];
    // In a real implementation, you would use PHPExcel or PhpSpreadsheet
    // For this example, we'll simulate the data processing
    
    // Simulated data processing based on the provided Excel content
    $lines = file($filePath);
    foreach ($lines as $line) {
        // Skip metadata lines and header
        if (strpos($line, 'metadata') !== false || strpos($line, 'FormalCode') !== false) {
            continue;
        }
        
        // Parse the CSV line (simplified)
        $data = str_getcsv($line, '|');
        if (count($data) >= 11) {
            $course = [
                'code' => trim($data[1]),
                'title' => trim($data[2]),
                'section' => trim($data[3]),
                'day1' => trim($data[4]),
                'day2' => trim($data[5]),
                'time1' => trim($data[6]),
                'time2' => trim($data[7]),
                'teacher1' => trim($data[8]),
                'teacher2' => trim($data[9]),
                'credits' => floatval(trim($data[10]))
            ];
            $courses[] = $course;
        }
    }
    
    // If no data was processed (as in this simulated version), use sample data
    if (empty($courses)) {
        $courses = getSampleData();
    }
    
    return $courses;
}

// Function to provide sample data (for demonstration)
function getSampleData() {
    return [
        [
            'code' => 'CSE 211',
            'title' => 'Computer Architecture',
            'section' => '241_D1',
            'day1' => 'Sun',
            'day2' => 'Tue',
            'time1' => '08:30:AM - 10:00:AM',
            'time2' => '11:30:AM - 01:00:PM',
            'teacher1' => 'kabir.cse',
            'teacher2' => 'kabir.cse',
            'credits' => 3.0
        ],
        [
            'code' => 'CSE 303',
            'title' => 'Microprocessors, Microcontrollers and Embedded Systems',
            'section' => '232_D1',
            'day1' => 'Sun',
            'day2' => 'Tue',
            'time1' => '10:00:AM - 11:30:AM',
            'time2' => '03:00:PM - 04:30:PM',
            'teacher1' => 'jarin.cse',
            'teacher2' => 'jarin.cse',
            'credits' => 3.0
        ],
        [
            'code' => 'CSE 304',
            'title' => 'Microprocessors, Microcontrollers and Embedded Systems Lab',
            'section' => '232_D1',
            'day1' => 'Wed',
            'day2' => '',
            'time1' => '11:30:AM - 01:30:PM',
            'time2' => '-',
            'teacher1' => 'jarin.cse',
            'teacher2' => '',
            'credits' => 1.0
        ],
        [
            'code' => 'CSE 305',
            'title' => 'Information System Design',
            'section' => '231_D1',
            'day1' => 'Sun',
            'day2' => 'Tue',
            'time1' => '11:30:AM - 01:00:PM',
            'time2' => '03:00:PM - 04:30:PM',
            'teacher1' => 'FATEMA.CSE',
            'teacher2' => 'FATEMA.CSE',
            'credits' => 3.0
        ],
        [
            'code' => 'MAT 203',
            'title' => 'Probability and Statistics for Computing',
            'section' => '241_D1',
            'day1' => 'Sun',
            'day2' => 'Tue',
            'time1' => '10:00:AM - 11:30:AM',
            'time2' => '08:30:AM - 10:00:AM',
            'teacher1' => '',
            'teacher2' => '',
            'credits' => 3.0
        ]
    ];
}

// Function to calculate total credits
function calculateTotalCredits($selectedCourses, $allCourses) {
    $total = 0;
    foreach ($selectedCourses as $courseIndex) {
        if (isset($allCourses[$courseIndex])) {
            $total += $allCourses[$courseIndex]['credits'];
        }
    }
    return $total;
}

// Function to check for time conflicts
function checkTimeConflicts($selectedCourses, $allCourses) {
    $schedule = [];
    $conflicts = [];
    
    foreach ($selectedCourses as $courseIndex) {
        if (!isset($allCourses[$courseIndex])) continue;
        
        $course = $allCourses[$courseIndex];
        $courseId = $course['code'] . ' - ' . $course['section'];
        
        // Process first day and time
        if (!empty($course['day1']) && $course['time1'] !== '-') {
            $day = $course['day1'];
            $timeSlot = $course['time1'];
            
            if (!isset($schedule[$day])) {
                $schedule[$day] = [];
            }
            
            if (in_array($timeSlot, $schedule[$day])) {
                $conflicts[] = $courseId;
            } else {
                $schedule[$day][] = $timeSlot;
            }
        }
        
        // Process second day and time
        if (!empty($course['day2']) && $course['time2'] !== '-') {
            $day = $course['day2'];
            $timeSlot = $course['time2'];
            
            if (!isset($schedule[$day])) {
                $schedule[$day] = [];
            }
            
            if (in_array($timeSlot, $schedule[$day])) {
                $conflicts[] = $courseId;
            } else {
                $schedule[$day][] = $timeSlot;
            }
        }
    }
    
    return array_unique($conflicts);
}

// Function to get unique course codes
function getUniqueCourseCodes($courses) {
    $codes = [];
    foreach ($courses as $course) {
        $codes[$course['code']] = $course['title'];
    }
    return $codes;
}

// Function to get sections for a specific course
function getSectionsForCourse($courseCode, $courses) {
    $sections = [];
    foreach ($courses as $index => $course) {
        if ($course['code'] === $courseCode) {
            $sections[$index] = $course;
        }
    }
    return $sections;
}

// Get unique course codes
$courseCodes = getUniqueCourseCodes($courses);
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Class Routine Visualizer</title>
    <style>
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            font-family: Arial, sans-serif;
        }
        body {
            padding: 20px;
            background-color: #f5f5f5;
        }
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        h1, h2, h3 {
            color: #333;
            margin-bottom: 15px;
        }
        .upload-section, .course-selection, .schedule-section {
            margin-bottom: 30px;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }
        input[type="file"], select, button {
            padding: 8px 12px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        button {
            background-color: #4CAF50;
            color: white;
            border: none;
            cursor: pointer;
            padding: 10px 15px;
        }
        button:hover {
            background-color: #45a049;
        }
        .message {
            padding: 10px;
            margin: 10px 0;
            border-radius: 4px;
        }
        .error {
            background-color: #ffebee;
            color: #c62828;
            border: 1px solid #ef9a9a;
        }
        .success {
            background-color: #e8f5e9;
            color: #2e7d32;
            border: 1px solid #a5d6a7;
        }
        .schedule-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        .schedule-table th, .schedule-table td {
            border: 1px solid #ddd;
            padding: 10px;
            text-align: center;
        }
        .schedule-table th {
            background-color: #f2f2f2;
        }
        .time-cell {
            background-color: #e1f5fe;
            font-weight: bold;
        }
        .course-cell {
            background-color: #bbdefb;
            cursor: pointer;
        }
        .course-cell:hover {
            background-color: #90caf9;
        }
        .credit-info {
            font-size: 18px;
            font-weight: bold;
            margin: 15px 0;
            color: #1976d2;
        }
        .course-list {
            margin: 15px 0;
        }
        .course-item {
            padding: 8px;
            margin: 5px 0;
            background-color: #f9f9f9;
            border-left: 4px solid #2196f3;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Class Routine Visualizer</h1>
        
        <!-- File Upload Section -->
        <div class="upload-section">
            <h2>Upload Excel File</h2>
            <form method="POST" enctype="multipart/form-data">
                <div class="form-group">
                    <label for="excelFile">Select Excel File:</label>
                    <input type="file" name="excelFile" id="excelFile" accept=".xlsx,.xls">
                </div>
                <button type="submit">Upload and Process</button>
            </form>
        </div>
        
        <?php if (!empty($message)): ?>
            <div class="message <?php echo !empty($conflicts) ? 'error' : 'success'; ?>">
                <?php echo htmlspecialchars($message); ?>
            </div>
        <?php endif; ?>
        
        <?php if (!empty($courses)): ?>
        <!-- Course Selection Section -->
        <div class="course-selection">
            <h2>Select Courses</h2>
            <form method="POST">
                <div class="form-group">
                    <label>Available Courses:</label>
                    <?php foreach ($courseCodes as $code => $title): ?>
                        <div>
                            <h3><?php echo htmlspecialchars($code . ' - ' . $title); ?></h3>
                            <?php $sections = getSectionsForCourse($code, $courses); ?>
                            <?php foreach ($sections as $index => $section): ?>
                                <div>
                                    <input type="checkbox" name="selected_courses[]" 
                                           value="<?php echo $index; ?>" 
                                           id="course_<?php echo $index; ?>"
                                           <?php echo in_array($index, $selectedCourses) ? 'checked' : ''; ?>>
                                    <label for="course_<?php echo $index; ?>">
                                        Section: <?php echo htmlspecialchars($section['section']); ?> | 
                                        Days: <?php echo htmlspecialchars($section['day1'] . ', ' . $section['day2']); ?> | 
                                        Time: <?php echo htmlspecialchars($section['time1'] . ', ' . $section['time2']); ?> | 
                                        Teacher: <?php echo htmlspecialchars($section['teacher1'] . ', ' . $section['teacher2']); ?> | 
                                        Credits: <?php echo htmlspecialchars($section['credits']); ?>
                                    </label>
                                </div>
                            <?php endforeach; ?>
                        </div>
                    <?php endforeach; ?>
                </div>
                <button type="submit">Generate Schedule</button>
            </form>
        </div>
        
        <!-- Schedule Display Section -->
        <div class="schedule-section">
            <h2>Class Schedule</h2>
            
            <div class="credit-info">
                Total Credits: <?php echo $totalCredits; ?> / 19
            </div>
            
            <?php if (!empty($selectedCourses)): ?>
            <div class="course-list">
                <h3>Selected Courses:</h3>
                <?php foreach ($selectedCourses as $courseIndex): ?>
                    <?php if (isset($courses[$courseIndex])): ?>
                        <div class="course-item">
                            <?php 
                            $course = $courses[$courseIndex];
                            echo htmlspecialchars($course['code'] . ' - ' . $course['title'] . 
                                  ' (Section: ' . $course['section'] . ', Credits: ' . $course['credits'] . ')');
                            ?>
                        </div>
                    <?php endif; ?>
                <?php endforeach; ?>
            </div>
            
            <table class="schedule-table">
                <thead>
                    <tr>
                        <th>Time</th>
                        <?php foreach ($days as $day): ?>
                            <th><?php echo $day; ?></th>
                        <?php endforeach; ?>
                    </tr>
                </thead>
                <tbody>
                    <?php foreach ($timeSlots as $timeSlot): ?>
                        <tr>
                            <td class="time-cell"><?php echo htmlspecialchars($timeSlot); ?></td>
                            <?php foreach ($days as $day): ?>
                                <td>
                                    <?php
                                    $courseInSlot = '';
                                    foreach ($selectedCourses as $courseIndex) {
                                        if (isset($courses[$courseIndex])) {
                                            $course = $courses[$courseIndex];
                                            if (($course['day1'] === $day && $course['time1'] === $timeSlot) || 
                                                ($course['day2'] === $day && $course['time2'] === $timeSlot)) {
                                                $courseInSlot = $course['code'] . ' - ' . $course['section'];
                                                break;
                                            }
                                        }
                                    }
                                    if (!empty($courseInSlot)) {
                                        echo '<div class="course-cell">' . htmlspecialchars($courseInSlot) . '</div>';
                                    }
                                    ?>
                                </td>
                            <?php endforeach; ?>
                        </tr>
                    <?php endforeach; ?>
                </tbody>
            </table>
            <?php endif; ?>
        </div>
        <?php endif; ?>
    </div>
</body>
</html>